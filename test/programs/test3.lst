

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 23 18:38:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x5E,2
    10  0000                     
    11                           ; Version 2.10
    12                           ; Generated 31/07/2019 GMT
    13                           ; 
    14                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC12F675 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0019                     	;# 
    59  001E                     	;# 
    60  001F                     	;# 
    61  0081                     	;# 
    62  0085                     	;# 
    63  008C                     	;# 
    64  008E                     	;# 
    65  0090                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0096                     	;# 
    69  0099                     	;# 
    70  009A                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  009F                     	;# 
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0019                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0090                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0096                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109                           
   110                           ; #config settings
   111  0000                     
   112                           	psect	cinit
   113  03FD                     start_initialization:	
   114  03FD                     __initialization:	
   115  03FD                     end_of_initialization:	
   116                           ;End of C runtime variable initialization code
   117                           
   118  03FD                     __end_of__initialization:	
   119  03FD  0183               	clrf	3
   120  03FE  2BF0               	ljmp	_main	;jump to C main() function
   121                           
   122                           	psect	cstackCOMMON
   123  0000                     __pcstackCOMMON:	
   124  0000                     ??_foo:	
   125  0000                     ??_main:	
   126                           ; 1 bytes @ 0x0
   127                           
   128                           
   129                           	psect	cstackBANK0
   130  0020                     __pcstackBANK0:	
   131                           ; 1 bytes @ 0x0
   132                           
   133  0020                     ?_foo:	
   134  0020                     ?_main:	
   135                           ; 1 bytes @ 0x0
   136                           
   137  0020                     foo@y:	
   138                           ; 1 bytes @ 0x0
   139                           
   140                           
   141                           ; 2 bytes @ 0x0
   142  0020                     	ds	2
   143                           
   144                           	psect	maintext
   145  03F0                     __pmaintext:	
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 19 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, status,2, status,0, pclath, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : B00/0
   162 ;;		On exit  : B00/0
   163 ;;		Unchanged: A00/0
   164 ;; Data sizes:     COMMON   BANK0
   165 ;;      Params:         0       0
   166 ;;      Locals:         0       0
   167 ;;      Temps:          0       0
   168 ;;      Totals:         0       0
   169 ;;Total ram usage:        0 bytes
   170 ;; Hardware stack levels required when called:    1
   171 ;; This function calls:
   172 ;;		_foo
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           
   179                           ;psect for function _main
   180  03F0                     _main:	
   181                           
   182                           ;main.c: 21: foo();
   183                           
   184                           ;incstack = 0
   185                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   186  03F0  23F2               	fcall	_foo
   187  03F1  2800               	ljmp	start
   188  03F2                     __end_of_main:	
   189                           
   190                           	psect	text1
   191  03F2                     __ptext1:	
   192 ;; *************** function _foo *****************
   193 ;; Defined at:
   194 ;;		line 14 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;  y               2    0[BANK0 ] unsigned int 
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg
   203 ;; Tracked objects:
   204 ;;		On entry : B00/0
   205 ;;		On exit  : B00/0
   206 ;;		Unchanged: A00/0
   207 ;; Data sizes:     COMMON   BANK0
   208 ;;      Params:         0       0
   209 ;;      Locals:         0       2
   210 ;;      Temps:          0       0
   211 ;;      Totals:         0       2
   212 ;;Total ram usage:        2 bytes
   213 ;; Hardware stack levels used:    1
   214 ;; This function calls:
   215 ;;		Nothing
   216 ;; This function is called by:
   217 ;;		_main
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           
   222                           ;psect for function _foo
   223  03F2                     _foo:	
   224                           
   225                           ;main.c: 15: unsigned int y = 12;
   226                           
   227                           ;incstack = 0
   228                           ; Regs used in _foo: [wreg]
   229  03F2  300C               	movlw	12
   230  03F3  00A0               	movwf	foo@y
   231  03F4  3000               	movlw	0
   232  03F5  00A1               	movwf	foo@y+1
   233                           
   234                           ;main.c: 16: y +=8;
   235  03F6  3008               	movlw	8
   236  03F7  07A0               	addwf	foo@y,f
   237  03F8  1803               	skipnc
   238  03F9  0AA1               	incf	foo@y+1,f
   239  03FA  3000               	movlw	0
   240  03FB  07A1               	addwf	foo@y+1,f
   241  03FC  0008               	return
   242  03FD                     __end_of_foo:	
   243  005E                     btemp	set	94	;btemp
   244  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      2       2

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_foo

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       2
                                _foo
 ---------------------------------------------------------------------------------
 (1) _foo                                                  2     2      0       2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _foo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      2       2       4        3.2%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 23 18:38:33 2020

                    _foo 03F2                     ?_foo 0020                     _main 03F0  
                   foo@y 0020                     btemp 005E                     start 0000  
                  ??_foo 0000                    ?_main 0020            __CFG_WDTE$OFF 0000  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 005E  
         __CFG_MCLRE$OFF 0000          __initialization 03FD             __end_of_main 03F2  
                 ??_main 0000  __end_of__initialization 03FD           __pcstackCOMMON 0000  
             __pmaintext 03F0                  __ptext1 03F2             __size_of_foo 000B  
   end_of_initialization 03FD      start_initialization 03FD              __end_of_foo 03FD  
              ___latbits 0000            __pcstackBANK0 0020            __size_of_main 0002  
      __CFG_FOSC$INTRCIO 0000  
